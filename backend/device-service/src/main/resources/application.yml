server:
  port: 8082
  servlet:
    context-path: /devices

spring:
  application:
    name: device-service

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:ems_devices}
    username: ${DB_USERNAME:ems_user}
    password: ${DB_PASSWORD:ems_password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      retry-backoff-ms: 1000
    consumer:
      group-id: device-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "com.ecogrid.ems.device.event"

# MQTT Configuration for IoT devices
mqtt:
  broker-url: tcp://localhost:1883
  client-id: device-service
  username: ${MQTT_USERNAME:ems_mqtt}
  password: ${MQTT_PASSWORD:ems_mqtt_password}
  topics:
    telemetry: "ems/+/+/telemetry"
    commands: "ems/+/+/commands"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    com.ecogrid.ems.device: DEBUG
