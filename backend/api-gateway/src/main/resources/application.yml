server:
  port: 8080

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      routes:
        # Auth Service Routes (Public endpoints)
        - id: auth-service
          uri: http://${AUTH_SERVICE_HOST:auth-service}:${AUTH_SERVICE_PORT:8081}
          predicates:
            - Path=/api/auth/**
          filters:
            - RewritePath=/api/auth/(?<path>.*), /auth/api/v1/auth/$\{path}
            - name: RequestLoggingFilter

        # Device Service Routes (Protected)
        - id: device-service
          uri: http://${DEVICE_SERVICE_HOST:device-service}:${DEVICE_SERVICE_PORT:8082}
          predicates:
            - Path=/api/devices/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
            - name: RequestLoggingFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requested-tokens: 1
            - name: CircuitBreaker
              args:
                name: device-service
                fallbackUri: forward:/fallback/device-service

        # Analytics Service Routes (Protected)
        - id: analytics-service
          uri: http://${ANALYTICS_SERVICE_HOST:analytics-service}:${ANALYTICS_SERVICE_PORT:8083}
          predicates:
            - Path=/api/analytics/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
            - name: RequestLoggingFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requested-tokens: 1
            - name: CircuitBreaker
              args:
                name: analytics-service
                fallbackUri: forward:/fallback/analytics-service

        # Notification Service Routes (Protected)
        - id: notification-service
          uri: http://${NOTIFICATION_SERVICE_HOST:notification-service}:${NOTIFICATION_SERVICE_PORT:8084}
          predicates:
            - Path=/api/notifications/**
          filters:
            - StripPrefix=1
            - name: JwtAuthenticationFilter
            - name: RequestLoggingFilter
            - name: CircuitBreaker
              args:
                name: notification-service
                fallbackUri: forward:/fallback/notification-service



  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 1

# JWT Configuration for token validation
jwt:
  secret: ${JWT_SECRET:mySecretKey1234567890123456789012345678901234567890}

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    com.ecogrid.ems.gateway: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
